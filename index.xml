<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Fire int the hold Blog</title>
    <link>https://fire-in-the-hold.github.io/</link>
    <description>Recent content on Fire int the hold Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 13 Jun 2022 12:23:01 +0800</lastBuildDate><atom:link href="https://fire-in-the-hold.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>學習 Ruby 123 - 6 流程與邏輯控制</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby6/</link>
      <pubDate>Mon, 13 Jun 2022 12:23:01 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby6/</guid>
      <description>等號 a = 10 b = &amp;#34;10&amp;#34; c = 10 p a == b # false p a === b # false p a == c # true p a === c # true if age = 19 if age &amp;gt;= 18 p &amp;#34;已成年&amp;#34; end p &amp;#34;已成年&amp;#34; if age &amp;gt;= 18 unless age = 12 if not age &amp;gt;= 18 p &amp;#34;未成年&amp;#34; end unless age &amp;gt;= 18 p &amp;#34;未成年&amp;#34; end p &amp;#34;未成年&amp;#34; unless age &amp;gt;= 18 if .</description>
    </item>
    
    <item>
      <title>學習 Ruby 123 - 5 陣列</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby5/</link>
      <pubDate>Mon, 13 Jun 2022 11:20:01 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby5/</guid>
      <description>陣列 # 建立陣列 list = %w(apple banana cat) p list # [&amp;#34;apple&amp;#34;, &amp;#34;banana&amp;#34;, &amp;#34;cat&amp;#34;] # 陣列操作 puts list[0] # apple puts list[1] # banana puts list[-1] # cat puts list[-2] # banana puts list.first # apple puts list.last # cat puts list.length # 3 list &amp;lt;&amp;lt; &amp;#39;elephant&amp;#39; puts list.last # elephant list.push(&amp;#39;fox&amp;#39;) puts list.last # fox 更多請參考官方手冊
map list = [1, 2, 3, 4, 5] p list.map { |x| x * 2} # [2, 4, 6, 8, 10] p (1.</description>
    </item>
    
    <item>
      <title>學習 Ruby 123 - 4 迴圈與迭代</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby4/</link>
      <pubDate>Mon, 13 Jun 2022 10:58:01 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby4/</guid>
      <description>For 迴圈 list = [&amp;#34;apple&amp;#34;, &amp;#34;banana&amp;#34;, &amp;#34;cat&amp;#34;] for item in list puts item end while 迴圈 x = 0 while x &amp;lt; 10 puts x x += 1 end until 迴圈 與 while 成立條件相反，為 while not
x = 0 while x &amp;gt; 10 puts x x += 1 end loop 迴圈 使用 break 跳脫迴圈
x = 0 loop do puts x x += 1 break if x &amp;gt; 10 end method 迴圈 使用 break 跳脫迴圈</description>
    </item>
    
    <item>
      <title>學習 Ruby 123 - 3 字串與數字</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby3/</link>
      <pubDate>Mon, 13 Jun 2022 10:40:01 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby3/</guid>
      <description>字串 name = &amp;#34;Fire&amp;#34; profit = 100000 # 可以帶變數 # 結果 Fire made $100000 profit today puts &amp;#34;hi, #{name} made $#{profit} profit today&amp;#34; puts %Q(hi, #{name} made $#{profit} profit today) # 不可以帶變數 # 結果 hi, #{name} made $#{profit} profit today puts &amp;#39;hi, #{name} made $#{profit} profit today&amp;#39; puts %q(hi, #{name} made $#{profit} profit today) 數字 # 四捨五入，取到整數 puts 0.15.round # 1 puts 0.95.round # 1 # 取整數，無條件捨去 puts 0.12.floor # 0 puts 0.</description>
    </item>
    
    <item>
      <title>學習 Ruby 123 - 2 常數 變數</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby2/</link>
      <pubDate>Mon, 13 Jun 2022 10:34:01 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby2/</guid>
      <description>變數種類 # 區域變數 message = 123 x, y, z = [1, 2, 3] # x = 1, y = 2, z = 3 a += 123 # a = a + 123 a ||= 2 # a = a || 2 # 全域變數 $message = 123 # 實體變數 @message = 123 # 類別變數 @@message = 123 小貼士 Ruby 常數是可以變動的 </description>
    </item>
    
    <item>
      <title>學習 Ruby 123 - 1 Hello owrld</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby/</link>
      <pubDate>Mon, 13 Jun 2022 01:34:01 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/learn-ruby/</guid>
      <description>Hello world $ruby -e &amp;#39;puts &amp;#39;hello world&amp;#39; 使用 irb (Interactive Ruby)
$ irb &amp;gt; puts &amp;#39;Hello world&amp;#39; 直接使用檔案
$ ruby hello.rb 印出
# 印出 hello world print &amp;#34;hello world&amp;#34; # 印出 hello world 後面有換行 puts &amp;#34;hello world&amp;#34; # 印出 &amp;#34;hello world&amp;#34; 包含雙引號，後面有換行 p &amp;#34;hello world&amp;#34; 註解 # 單行註解 =begin 這是一個 多行的 註解 =end Gem ruby 的套件管理工具 https://rubygems.org/?locale=zh-TW
安裝套件 $ gem install hello-world 查詢環境 $ gem env 可使用資源 線上直接執行 ruby https://replit.com/</description>
    </item>
    
    <item>
      <title>Manager Macbook Touch Bar</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/06/manager-macbook-touch-bar/</link>
      <pubDate>Fri, 10 Jun 2022 11:22:26 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/06/manager-macbook-touch-bar/</guid>
      <description>Macbook touch bar 是我經常誤碰的東西，經常無意間的跳出，尤其我的手經常停於 ESC 附近。所以我需要將觸控的左上角觸控無效化。
BetterTouchTool 可以使用 BetterTouchTool 管你的 touch，他的客製化非常多，可以輕鬆地將上面當作一個小螢幕一樣，監控一些數值。
擁有豐富的支援，你可以透過 shell 執行各種 nodejs / python 等等，去抓取你要的數值。
你可以設定各種手勢，以及各種對應的操控。比方五指一起滑是鎖定螢幕，在觸控板上畫一個圓圈做什麼做什麼。
Pock 或者使用 Pock 來管理，但功能簡單，要開發一個應用也比較麻煩，必須學習 macos 原生應用才能撰寫。</description>
    </item>
    
    <item>
      <title>如何建置 Hugo 部落格</title>
      <link>https://fire-in-the-hold.github.io/posts/2022/04/how-to-create-hugo-blog/</link>
      <pubDate>Sat, 04 Jun 2022 06:43:10 +0800</pubDate>
      
      <guid>https://fire-in-the-hold.github.io/posts/2022/04/how-to-create-hugo-blog/</guid>
      <description>這是一個使用 Hugo 快速建立的部落格，他能協助你快速的建立一個部落格網站，並且可將 Code 放置於 Github.io 免費的伺服器空間。這種網站好處就是，免伺服器費用，可以高度自定化，對於 SEO 而言也非常友善。
要先知道的東西 Hugo 本次的主角，一系列工具可以讓你快速產生程式碼。
Markdown 是一個可以透過文字的方式，做出各種排版的一種語法格式。
Git 版本控制工具，讓你可以對於文字作版本控制。
Version control 就是你文字編輯過程都有一個紀錄，只要處理一個檔案即可。可以隨時切回以前的版本，而不用把桌面放的滿滿的備份檔案。
Github 存放 Version control 所有歷史資料的服務，另外也提供一些免費靜態網站空間，讓你可以存放 HTML。
Homebrew Macos 套件管理的套件管理
VSCode 一個功能特別多的文字編輯器
環境建置 本篇以 Macos 開始
打開 Terminal 輸入以下指令安裝 Homebrew /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; 輸入以下指令安裝 Hugo brew install hugo 輸入指令建立一個 Hugo 檔案資料夾，裡面會包含一些 Hugo 的程式碼 hugo new site ${你的資料夾名稱} 到 https://themes.gohugo.io/ 挑選一個喜歡的模板下載，下載後解壓縮，將整個資料夾，放到上一步所產生資料夾內的 ${你的資料夾名稱}/themes/ archetypes/: 文章預設配置 content/: 放文章的地方 data/: (空的) layout/: 網站一些的配置，包含頁首頁尾那些 static/: 放圖片、CSS等檔案的地方 themes/: 你使用的模板配置 &amp;lt;- 將模板放置於此 config.</description>
    </item>
    
  </channel>
</rss>
